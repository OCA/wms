==================================
Stock Available to Promise Release
==================================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:ad1c12b059a2035ad65723f2f850a199fe40bc0af614bcc0aab762b08daf9e8c
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Alpha-red.png
    :target: https://odoo-community.org/page/development-status
    :alt: Alpha
.. |badge2| image:: https://img.shields.io/badge/licence-LGPL--3-blue.png
    :target: http://www.gnu.org/licenses/lgpl-3.0-standalone.html
    :alt: License: LGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fwms-lightgray.png?logo=github
    :target: https://github.com/OCA/wms/tree/13.0/stock_available_to_promise_release
    :alt: OCA/wms
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/wms-13-0/wms-13-0-stock_available_to_promise_release
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png
    :target: https://runboat.odoo-community.org/builds?repo=OCA/wms&target_branch=13.0
    :alt: Try me on Runboat

|badge1| |badge2| |badge3| |badge4| |badge5|

Currently the reservation is performed by adding reserved quantities on quants,
which is fine as long as the reservation is made right after the order
confirmation. This way, the first arrived, first served principle is always
applied. But if you release warehouse operations in a chosen order (through
deliver round for example), then you need to be sure the reservations are made
in respect to the first arrived first served principle and not driven by the
order you choose to release your operations.

Allow each delivery move to mark a quantity as virtually reserved. Simple rule
would be first ordered, first served. More complex rules could be implemented.

When the reservation of a picking move occurs, the quantity that is reserved is
then based on the quantity that was promised to the customer (available to promise):

* The moves can be reserved in any order, the right quantity is always reserved
* The removal strategy is computed only when the reservation occurs. If you
  reserve order 2 before order 1 (because you have/want to deliver order 2) you
  can apply correctly fifo/fefo.

  * For instance order 1 must be delivered in 1 month, order 2 must be delivered now.
  * Virtually lock quantities to be able to serve order 1
  * Reserve remaining quantity for order 2 and apply fefo

* Allow to limit the promised quantity in time. If a customer orders now for a
  planned delivery in 2 months, then allow to not lock this quantity as
  virtually reserved
* Allow to perform reservations jointly with your delivery rounds planning.
  Reserve only the quants you planned to deliver.

When move qty is not completely satisfied on release,
the remaining qty is split and attached to a new picking that can be released later.

Important: if the "Stock reservation horizon" is set, the qty is calculated
on moves which have an expected date not beyond $today + $horizon (in days).

.. IMPORTANT::
   This is an alpha version, the data model and design can change at any time without warning.
   Only for development or testing purpose, do not use in production.
   `More details on development status <https://odoo-community.org/page/development-status>`_

**Table of contents**

.. contents::
   :local:

Configuration
=============

In Inventory > Configuration > Routes, activate the option "Release based on
Available to Promise" on the routes where you want to use the feature.

To modify the horizon go to "Inventory > Settings" and change "Stock reservation horizon".

Usage
=====

When an outgoing transfer would generate chained moves, it will not. The chained
moves need to be released manually. To do so, open "Inventory > Operations >
Stock Allocation", select the moves to release and use "action > Release
Stock Move". A move can be released only if the available to promise quantity is
greater than zero. This quantity is computed as the product's virtual quantity
minus the previous moves in the list (previous being defined by the field
"Priority Date").

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/wms/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OCA/wms/issues/new?body=module:%20stock_available_to_promise_release%0Aversion:%2013.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Camptocamp

Contributors
~~~~~~~~~~~~

* Guewen Baconnier <guewen.baconnier@camptocamp.com>
* Simone Orsi <simone.orsi@camptocamp.com>
* Jacques-Etienne Baudoux <je@bcim.be>

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/wms <https://github.com/OCA/wms/tree/13.0/stock_available_to_promise_release>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
